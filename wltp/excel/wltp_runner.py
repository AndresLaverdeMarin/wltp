#!/usr/bin/env python#-*- coding: utf-8 -*-## Copyright 2013-2014 European Commission (JRC);# Licensed under the EUPL (the 'Licence');# You may not use this work except in compliance with the Licence.# You may obtain a copy of the Licence at: http://ec.europa.eu/idabc/euplfrom __future__ import division, print_function, unicode_literalsimport osimport sysfrom wltp.experiment import Experimentimport pandas as pdimport wltp.pandel as pdlimport xlwings as xwdef add_cycle_run_as_sheet(veh_id, mdl_out):    sheet = "cycle_%s"%veh_id    try:        xw.Sheet.add(sheet)    except Exception as ex:        print("Sheet(%s) already exists(%s)." % (sheet, ex), file=sys.stderr)        xw.Sheet(sheet).clear()    xw.Range(sheet, 'A1').value = mdl_out['cycle_run']    def run_experiments(vehs_df, store_func=add_cycle_run_as_sheet, err_func=None):    """    Iterates `veh_df` and runs experiments.        :param vehs_df:     A dataframe indexed by veh_id, and with columns *json-pointer* paths into the model    :param store_func:  A function handling the result-model: ``store_func(veh_id, model_out)``    :param err_func:    A function handling the result-model: ``store_func(veh_id, exception)``                        If unspecified, any errors will break iteration    """        for veh_id, row in vehs_df.iterrows():        try:            mdl_in = {}            for k, v in row.items():                print((veh_id, k, v), file=sys.stderr)                if isinstance(v, str):                    v = eval(v)                pdl.set_jsonpointer(mdl_in, k, v)            #print((mdl_in), file=sys.stderr)            exp = Experiment(mdl_in)            mdl_out = exp.run()                        store_func(veh_id, mdl_out)        except Exception as ex:            if err_func:                err_func(veh_id, exception=ex)            else:                raise Exception('Veh(%s): %s' % (veh_id, ex)) from ex             if __name__ == '__main__':    vehs_df = pd.read_excel('wltp_runner.xlsm', 0, parse_cols='D:I', skiprows=1, skip_footer=3)    vehs_df = vehs_df.set_index('id')    print((os.getcwd(), vehs_df), file=sys.stderr)    run_experiments(vehs_df)